#!/bin/sh

# PROVIDE: powerdnsadmin
# REQUIRE: NETWORK
# BEFORE:  DAEMON

. /etc/rc.subr

name="powerdnsadmin"
desc="A PowerDNS web interface with advanced features"
rcvar="powerdnsadmin_enable"
pidfile="/var/run/${name}.pid"
daemon_pidfile="/var/run/${name}-daemon.pid"
logdir="/var/log/${name}"
logfile="${logdir}/powerdnsadmin.log"
extra_commands="reload"
command="/root/powerdnsadmin/run.py"
powerdnsadmin_config=${powerdnsadmin_config-"/usr/local/etc/powerdnsadmin/default_config.py"}
required_files="${powerdnsadmin_config}"
powerdnsadmin_args=${powerdnsadmin_args-"-config ${powerdnsadmin_config}"}

load_rc_config ${name}

start_cmd="start"
stop_cmd="stop"
status_cmd="status"
reload_cmd="reload"

PATH="${PATH}:/usr/local/bin:/usr/local/sbin"

stop()
{
	if [ -f "${daemon_pidfile}" ]; then
		pids=$( pgrep -F ${daemon_pidfile} 2>&1 )
		_err=$?
		[ ${_err} -eq  0 ] && kill -9 ${pids} && /bin/rm -f ${daemon_pidfile}
	fi
	if [ -f "${pidfile}" ]; then
		pids=$( pgrep -F ${pidfile} 2>&1 )
		_err=$?
		[ ${_err} -eq  0 ] && kill -9 ${pids} && /bin/rm -f ${pidfile}
	fi

	# dup process: bug ?
	ps axfwwww | grep powerdnsadmin/run.py | grep -v grep | awk '{printf "kill -9 "$1"\n"}' | sh > /dev/null 2>&1
}

start()
{
	[ ! -d ${logdir} ] && mkdir -p ${logdir}
	touch ${logfile}

	cd /root/powerdnsadmin
	export FLASK_APP=/root/powerdnsadmin/powerdnsadmin/__init__.py
	export FLASK_CONF=/usr/local/etc/powerdnsadmin/default_config.py
	# migration first
	/usr/local/bin/flask db upgrade || true

	/usr/sbin/daemon -f -R5 -p ${pidfile} -P ${daemon_pidfile} -o ${logfile} ${command} ${powerdnsadmin_args}
}

reload()
{
	stop
	start
}

status()
{
	if [ -f "${pidfile}" ]; then
		pids=$( pgrep -F ${pidfile} 2>&1 )
		_err=$?
		if [ ${_err} -eq  0 ]; then
			echo "${name} is running as pid ${pids}"
			exit 0
		else
			echo "wrong pid: ${pids}"
			exit 1
		fi
	else
		echo "no pidfile $pidfile"
		exit 1
	fi
}

run_rc_command "$1"
