#!/bin/sh

# PROVIDE: ttyd
# REQUIRE: LOGIN
# KEYWORD: shutdown

# Add the following lines to /etc/rc.conf to enable nginx:
# ttyd_enable (bool):           Set to "NO" by default.
#                               Set it to "YES" to enable ttyd
# ttyd_command (str):           Set to "" by default.
#                               Command to start via ttyd.
# ttyd_flags (str):             Set to "" by default.
#                               Extra flags passed to start command.
# ttyd_user (str):              Set to "" by default.
#                               Run ttyd from user.

. /etc/rc.subr

name=ttyd
rcvar="${name}_enable"
pidfile="/var/run/${name}.pid"
daemon_pidfile="/var/run/${name}-daemon.pid"
logdir="/var/log/${name}"
logfile="${logdir}/${name}.log"
command="/usr/local/bin/${name}"

load_rc_config $name

start_cmd="start"
stop_cmd="stop"
status_cmd="status"

: ${ttyd_enable:="NO"}
: ${ttyd_flags:="login"}
: ${ttyd_command:="login"}
: ${ttyd_user:="nobody"}

start()
{
	[ ! -d ${logdir} ] && mkdir -p ${logdir}
	touch ${logfile}
	chown ${ttyd_user} ${logdir} ${logfile}
	/usr/sbin/daemon -u ${ttyd_user} -f -R5 -p ${pidfile} -P ${daemon_pidfile} -o ${logfile} ${command} ${ttyd_flags} ${ttyd_command}
}

stop()
{
	if [ -f "${daemon_pidfile}" ]; then
		pids=$( pgrep -F ${daemon_pidfile} 2>&1 )
		_err=$?
		[ ${_err} -eq 0 ] && kill -9 ${pids} && /bin/rm -f ${daemon_pidfile}
	fi
	if [ -f "${pidfile}" ]; then
		pids=$( pgrep -F ${pidfile} 2>&1 )
		_err=$?
		[ ${_err} -eq 0 ] && kill -9 ${pids} && /bin/rm -f ${pidfile}
	fi
}

status()
{
	if [ -f "${pidfile}" ]; then
		pids=$( pgrep -F ${pidfile} 2>&1 )
		_err=$?
		if [ ${_err} -eq 0 ]; then
			echo "${name} is running as pid ${pids}"
			exit 0
		else
			echo "wrong pid: ${pids}"
			exit 1
		fi
	else
		echo "no pidfile $pidfile"
		exit 1
	fi
}

run_rc_command "$1"
